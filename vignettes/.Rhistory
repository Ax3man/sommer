# setwd("~/Desktop/sommer/vignettes")
setwd("~/Desktop/sommer/vignettes")
library(rmarkdown)
install.packages("rmarkdown")
library(sommer)
# setwd("~/Desktop/sommer/vignettes")
setwd("~/Desktop/sommer/vignettes")
library(rmarkdown)
library(sommer)
render("sommer.Rmd", pdf_document())
devtools::install_github("larsgr/RLinuxModules")
Sys.which("pdflatex")
Sys.getenv("PATH")
Sys.setenv(PATH=paste(Sys.getenv("PATH"),"/usr/texbin",sep=":"))
Sys.which("pdflatex")
Sys.getenv("PATH")
render("sommer.Rmd", pdf_document())
# setwd("~/Desktop/sommer/vignettes")
setwd("~/Desktop/sommer/vignettes")
library(rmarkdown)
library(sommer)
render("sommer.start.Rmd", pdf_document())
install.packages("~/Desktop/sommer_3.8.tar.gz", repos = NULL, type = "source")
# setwd("~/Desktop/sommer/vignettes")
setwd("~/Desktop/sommer/vignettes")
library(rmarkdown)
library(sommer)
# Sys.which("pdflatex")
# Sys.getenv("PATH")
# Sys.setenv(PATH=paste(Sys.getenv("PATH"),"/usr/texbin",sep=":"))
render("sommer.Rmd", pdf_document())
render("sommer.start.Rmd", pdf_document())
library(cranlogs)
#cran_top_downloads(when='last-year')
library(ggplot2)
data <- cran_downloads(packages=c("sommer","rrBLUP"), from="2018-09-01",to="last-day")
#data <- cran_downloads(packages=c("sommer","rrBLUP"), when="last-month")
qplot(date, count, data=data, geom="line", colour=package,
ylab="Downloads", main="Package downloads in past year") + ylim(0,100)
?sommer
?mmer
data(DT_example)
head(DT)
####=========================================####
#### Univariate homogeneous variance models  ####
####=========================================####
## Compound simmetry (CS) model
ans1 <- mmer(Yield~Env,
random= ~ Name + Env:Name,
rcov= ~ units,
data=DT)
summary(ans1)
ans6 <- mmer(cbind(Yield, Weight) ~ Env,
random= ~ vs(us(Env),Name),
rcov= ~ vs(ds(Env),units),
data=DT)
summary(ans6)
ans6$sigma
# ####==========================================####
# #### Multivariate homogeneous variance models ####
# ####==========================================####
#
# ## Multivariate Compound simmetry (CS) model
DT$EnvName <- paste(DT$Env,DT$Name)
ans4 <- mmer(cbind(Yield, Weight) ~ Env,
random= ~ vs(Name, Gtc = unsm(2)) + vs(EnvName,Gtc = unsm(2)),
rcov= ~ vs(units, Gtc = unsm(2)),
data=DT)
summary(ans4)
#               random= ~ vs(Name, Gtc = unsm(2)) + vs(EnvName,Gtc = unsm(2)),
#               rcov= ~ vs(units, Gtc = unsm(2)),
#               data=DT)
# summary(ans4)
#
# ####=============================================####
# #### Multivariate heterogeneous variance models  ####
# ####=============================================####
#
# ## Multivariate Compound simmetry (CS) + Diagonal (DIAG) model
ans5 <- mmer(cbind(Yield, Weight) ~ Env,
random= ~ vs(Name, Gtc = unsm(2)) + vs(ds(Env),Name, Gtc = unsm(2)),
rcov= ~ vs(ds(Env),units, Gtc = unsm(2)),
data=DT)
# ans5 <- mmer(cbind(Yield, Weight) ~ Env,
#               random= ~ vs(Name, Gtc = unsm(2)) + vs(ds(Env),Name, Gtc = unsm(2)),
#               rcov= ~ vs(ds(Env),units, Gtc = unsm(2)),
#               data=DT)
# summary(ans5)
#
# ####===========================================####
# #### Multivariate unstructured variance models ####
# ####===========================================####
#
ans6 <- mmer(cbind(Yield, Weight) ~ Env,
random= ~ vs(us(Env),Name, Gtc = unsm(2)),
rcov= ~ vs(ds(Env),units, Gtc = unsm(2)),
data=DT)
Gtc = unsm(2)
unsm(4)
data("DT_cpdata")
head(DT)
GT[1:4,1:4]
#### create the variance-covariance matrix
A <- A.mat(GT)
#### look at the data and fit the model
head(DT)
#### look at the data and fit the model
mix1 <- mmer(Yield~1,
random=~vs(id, Gu=A) + Rowf,
rcov=~units,
data=DT)
summary(mix1)$varcomp
#### calculate heritability
pin(mix1, h1 ~ V1/(V1+V3) )
#### multi trait example
mix2 <- mmer(cbind(Yield,color)~1,
random = ~ vs(id, Gu=A, Gtc = unsm(2)) +
vs(Rowf, Gtc=diag(2)) + # diagonal structure at trait level
vs(Colf, Gtc=diag(2)), # diagonal structure at trait level
rcov = ~ vs(units),
data=DT)
summary(mix2)
#
# ####=========================================####
# #### EXAMPLE 3
# #### comparison with lmer, install 'lme4'
# #### and run the code below
# ####=========================================####
#
# #### lmer cannot use var-cov matrices so we will not
# #### use them in this comparison example
#
library(lme4)
library(sommer)
data("DT_cornhybrids")
fm1 <- lmer(Yield ~ Location + (1|GCA1) + (1|GCA2) + (1|SCA),
data=DT )
out <- mmer(Yield ~ Location,
random = ~ GCA1 + GCA2 + SCA,
rcov = ~ units,
data=DT)
summary(fm1)
summary(out)
### same BLUPs for GCA1, GCA2, SCA than lme4
plot(out$U$GCA1$Yield, ranef(fm1)$GCA1[,1])
plot(out$U$GCA2$Yield, ranef(fm1)$GCA2[,1])
vv=which(abs(out$U$SCA$Yield) > 0)
plot(out$U$SCA$Yield[vv], ranef(fm1)$SCA[,1])
### a more complex model specifying which locations
head(DT)
out2 <- mmer(Yield ~ 1,
random = ~ vs(at(Location,c("3","4")),GCA2) +
vs(at(Location,c("3","4")),SCA),
rcov = ~ vs(ds(Location),units),
data=DT)
summary(out2)
out2 <- mmer(Yield ~ 1,
random = ~ vs(at(Location,c("3","4")),GCA2) +
vs(at(Location,c("3","4")),SCA),
rcov = ~ vs(at(Location,c("3","4")),units),
data=DT)
summary(out2)
out2 <- mmer(Yield ~ Location,
random = ~ vs(at(Location,c("3","4")),GCA2) +
vs(at(Location,c("3","4")),SCA),
rcov = ~ vs(ds(Location),units),
data=DT)
summary(out2)
data <- cran_downloads(packages=c("Fragman","sommer"), when="last-month")
qplot(date, count, data=data, geom="line", colour=package,
ylab="Downloads", main="Package downloads in past year")
data <- cran_downloads(packages=c("sommer","EMMREML"),from="2018-09-03",to="last-day")
qplot(date, count, data=data, geom="line", colour=package,
ylab="Downloads", main="Package downloads in past year")
sum(data$count[which(data$package == "sommer")])
sum(data$count[which(data$package == "EMMREML")])
# data <- cran_downloads(packages=c("sommer","BGLR"), when="last-month")
data <- cran_downloads(packages=c("sommer","BGLR"),from="2018-09-03",to="last-day")
qplot(date, count, data=data, geom="line", colour=package,
ylab="Downloads", main="Package downloads in past year")
sum(data$count[which(data$package == "GiNA")])
data <- cran_downloads(packages=c("sommer","pedigreemm"), when="last-month")
qplot(date, count, data=data, geom="line", colour=package,
ylab="Downloads", main="Package downloads in past year")
data <- cran_downloads(packages=c("sommer","AGHmatrix"), when="last-month")
qplot(date, count, data=data, geom="line", colour=package,
ylab="Downloads", main="Package downloads in past year")
?leg
?DT_legendre
library(orthopolynom)
data(DT_legendre)
mRR2<-mmer(Y~ 1 + Xf
, random=~ vs(us(leg(X,1)),SUBJECT)
, rcov=~vs(units)
, data=DT)
summary(mRR2)$varcomp
mRR2<-mmer(Y~ 1 + Xf
, random=~ vs(us(leg(X,1)),SUBJECT)
, rcov=~units
, data=DT)
summary(mRR2)$varcomp
mRR2$sigma
mRR2$sigma_scaled
mRR2$sigmaSE
mRR2$U$`leg0:SUBJECT`$Y
mRR2$call
mRR2$monitor
plot(mRR2$monitor[1,])
mRR2$constraints
