which(pp$fitted$id %in% v)
pp$fitted$id
v
pp$fitted[which(as.character(pp$fitted$id) %in% as.character(v)),"predicted.value.Yield"]
which(as.character(pp$fitted$id) %in% as.character(v))
as.character(pp$fitted$id)
as.character(v)
pp <- predict(mix1, newdata = DT)
pp <- predict(mix1, newdata = DT, classify = "id")
mix1$U$`u:id`
pp <- data.frame(mix1$U$`u:id`)
head(vv)
head(pp)
pp[which(rownames(pp) %in% as.character(v)),"predicted.value.Yield"]
which(rownames(pp) %in% as.character(v))
pp[which(rownames(pp) %in% as.character(v)),]
cor(pp[which(rownames(pp) %in% as.character(v)),],DT[which(DT$id %in% v), "Yield"])
cor(pp[which(rownames(pp) %in% as.character(v)),],DT[which(DT$id %in% v), "Yield"], use = "complete.cases")
?cor
cor(pp[which(rownames(pp) %in% as.character(v)),],DT[which(DT$id %in% v), "Yield"], use = "complete.obs")
coro <- numeric()
for(i in 1:10){
DT2 <- DT
v <- sample(unique(DT2$id),30)
DT2[which(DT2$id %in% v), "Yield"] <- NA
mix1 <- mmer(Yield~1,
random=~vs(id,Gu=A)
+ Rowf + Colf,
rcov=~units,
data=DT2)
pp <- data.frame(mix1$U$`u:id`)
coro[i] <- cor(pp[which(rownames(pp) %in% as.character(v)),],DT[which(DT$id %in% v), "Yield"], use = "complete.obs")
}
plot(coro)
boxplot(coro)
boxplot(coro, ylim=c(0,1))
coro <- numeric()
for(i in 1:30){
DT2 <- DT
v <- sample(unique(DT2$id),30)
DT2[which(DT2$id %in% v), "Yield"] <- NA
mix1 <- mmer(Yield~1,
random=~vs(id,Gu=A)
+ Rowf + Colf,
rcov=~units,
data=DT2)
pp <- data.frame(mix1$U$`u:id`)
coro[i] <- cor(pp[which(rownames(pp) %in% as.character(v)),],DT[which(DT$id %in% v), "Yield"], use = "complete.obs")
}
boxplot(coro, ylim=c(0,1))
coro <- numeric()
for(i in 1:10){
DT2 <- DT
v <- sample(unique(DT2$id),30)
DT2[which(DT2$id %in% v), "Yield"] <- NA
mix1 <- mmer(Yield~1,
random=~vs(id,Gu=A)
+ Rowf + Colf,
rcov=~units, getPEV = FALSE,
data=DT2)
pp <- data.frame(mix1$U$`u:id`)
coro[i] <- cor(pp[which(rownames(pp) %in% as.character(v)),],DT[which(DT$id %in% v), "Yield"], use = "complete.obs")
}
boxplot(coro, ylim=c(0,1))
?DT_cornhybrids
data(DT_cornhybrids)
DT_cornhybrids <- DT
hybrid2 <- DT # extract cross data
A <- GT
K1 <- A[levels(hybrid2$GCA1), levels(hybrid2$GCA1)]; dim(K1)
K2 <- A[levels(hybrid2$GCA2), levels(hybrid2$GCA2)]; dim(K2)
S <- kronecker(K1, K2) ; dim(S)
rownames(S) <- colnames(S) <- levels(hybrid2$SCA)
ans <- mmer(Yield ~ Location,
random = ~ vs(GCA1,Gu=K1) + vs(GCA2,Gu=K2) + vs(SCA,Gu=S),
rcov=~units,
data=hybrid2)
summary(ans)
ans$Beta
ans$VarBeta
ans$sigmaSE
ans$monitor
ans <- mmer(Yield ~ Location,
random = ~ vs(GCA1,Gu=K1) + vs(GCA2,Gu=K2) + vs(SCA,Gu=S),
rcov=~units,
data=hybrid2)
summary(ans)
unlist(ans$sigma_scaled)
unlist(ans$sigma_scaled)*var(hybrid2$Yield)
unlist(ans$sigma_scaled)*var(hybrid2$Yield, na.rm = TRUE)
unlist(ans$sigma)
var(hybrid2$Yield, na.rm = TRUE)
pin(ans, v~V1+V2+V3+V4)
var(DT2$Yield, na.rm = T)
pin(mix1, v~V1+V2+V3+V4)
rr <- rnorm(1000,4931,547.5)
plot(density(rr))
var(DT2$Yield, na.rm = T)
rr <- rnorm(10000,4931,547.5)
plot(density(rr))
rr <- rnorm(50000,4931,547.5)
plot(density(rr))
library(mvtnorm)
mix1 <- mmer(cbind(Yield,color)~1,
random=~vs(id,Gu=A)
+ Rowf + Colf,
rcov=~units, getPEV = FALSE,
data=DT2)
data(DT_cpdata)
#### create the variance-covariance matrix
A <- A.mat(GT) # additive relationship matrix
#### look at the data and fit the model
head(DT)
coro <- numeric()
DT2 <- DT
v <- sample(unique(DT2$id),30)
DT2[which(DT2$id %in% v), "Yield"] <- NA
mix1 <- mmer(cbind(Yield,color)~1,
random=~vs(id,Gu=A)
+ Rowf + Colf,
rcov=~units, getPEV = FALSE,
data=DT2)
cov2cor(mix1$sigma$`u:id`)
diag(mix1$sigma$`u:id`)
diag(mix1$sigma_scaled$`u:id`)
x <- rmvnorm(n=500, mean=diag(mix1$sigma_scaled$`u:id`), sigma=cov2cor(mix1$sigma_scaled$`u:id`), method="chol")
set.seed (123)
xvar <- c(rnorm (100, 50, 30), rnorm (100, 40, 10), rnorm (100, 70, 10))
yvar <-   xvar + rnorm (length (xvar), 0, 20)
myd <- data.frame (xvar, yvar)
head(myd)
head(x)
x <- as.data.frame(x)
colnames(x) <- c("xvar","yvar")
head(x)
myd <- x
library(ggplot2)
library(grid)
p1 <- ggplot(myd,aes(x=xvar,y=yvar))+
stat_density2d(aes(fill=..level..), geom="polygon") +
geom_polygon(aes(x, y),
data.frame(x = c(-Inf, -Inf, 30, 30), y = c(-Inf, 30, 30, -Inf)),
alpha = 0.5, colour = NA, fill = "red") +
geom_polygon(aes(x, y),
data.frame(x = c(Inf, Inf, 80, 80), y = c(Inf, 80, 80, Inf)),
alpha = 0.5, colour = NA, fill = "green") +
coord_cartesian(c(0, 120), c(0, 120)) +
opts(legend.position = "none")
p1 <- ggplot(myd,aes(x=xvar,y=yvar))+
stat_density2d(aes(fill=..level..), geom="polygon") +
geom_polygon(aes(x, y),
data.frame(x = c(-Inf, -Inf, 30, 30), y = c(-Inf, 30, 30, -Inf)),
alpha = 0.5, colour = NA, fill = "red") +
geom_polygon(aes(x, y),
data.frame(x = c(Inf, Inf, 80, 80), y = c(Inf, 80, 80, Inf)),
alpha = 0.5, colour = NA, fill = "green") +
coord_cartesian(c(0, 120), c(0, 120))
xd <- data.frame(density(myd$xvar)[c("x", "y")])
p2 <- ggplot(xd, aes(x, y)) +
geom_area(data = subset(xd, x < 30), fill = "red") +
geom_area(data = subset(xd, x > 80), fill = "green") +
geom_line() +
coord_cartesian(c(0, 120))
yd <- data.frame(density(myd$yvar)[c("x", "y")])
p3 <- ggplot(yd, aes(x, y)) +
geom_area(data = subset(yd, x < 30), fill = "red") +
geom_area(data = subset(yd, x > 80), fill = "green") +
geom_line() +
coord_flip(c(0, 120))
gt <- ggplot_gtable(ggplot_build(p1))
gt2 <- ggplot_gtable(ggplot_build(p2))
gt3 <- ggplot_gtable(ggplot_build(p3))
gt1 <- ggplot2:::gtable_add_cols(gt, unit(0.3, "null"), pos = -1)
grid.newpage()
grid.draw(gt1)
grid.draw(gt)
gt <- ggplot_gtable(ggplot_build(p1))
gt2 <- ggplot_gtable(ggplot_build(p2))
gt3 <- ggplot_gtable(ggplot_build(p3))
grid.draw(p1)
grid.draw(p2)
grid.draw(p3)
library(grid)
set.seed (123)
xvar <- c(rnorm (100, 50, 30), rnorm (100, 40, 10), rnorm (100, 70, 10))
yvar <-   xvar + rnorm (length (xvar), 0, 20)
myd <- data.frame (xvar, yvar)
p1 <- ggplot(myd,aes(x=xvar,y=yvar))+
stat_density2d(aes(fill=..level..), geom="polygon") +
coord_cartesian(c(0, 150), c(0, 150)) +
opts(legend.position = "none")
p2 <- ggplot(myd, aes(x = xvar)) + stat_density() +
coord_cartesian(c(0, 150))
p3 <- ggplot(myd, aes(x = yvar)) + stat_density() +
coord_flip(c(0, 150))
gt <- ggplot_gtable(ggplot_build(p1))
gt2 <- ggplot_gtable(ggplot_build(p2))
gt3 <- ggplot_gtable(ggplot_build(p3))
gt1 <- ggplot2:::gtable_add_cols(gt, unit(0.3, "null"), pos = -1)
gt1 <- ggplot2:::gtable_add_rows(gt1, unit(0.3, "null"), pos = 0)
gt1 <- ggplot2:::gtable_add_grob(gt1, gt2$grobs[[which(gt2$layout$name == "panel")]],
1, 4, 1, 4)
gt1 <- ggplot2:::gtable_add_grob(gt1, gt2$grobs[[which(gt2$layout$name == "axis-l")]],
1, 3, 1, 3, clip = "off")
gt1 <- ggplot2:::gtable_add_grob(gt1, gt3$grobs[[which(gt3$layout$name == "panel")]],
4, 6, 4, 6)
gt1 <- ggplot2:::gtable_add_grob(gt1, gt3$grobs[[which(gt3$layout$name == "axis-b")]],
5, 6, 5, 6, clip = "off")
grid.newpage()
grid.draw(gt1)
grid.draw(gt)
x <- rmvnorm(n=500, mean=diag(mix1$sigma_scaled$`u:id`), sigma=cov2cor(mix1$sigma_scaled$`u:id`), method="chol")
x <- as.data.frame(x)
colnames(x) <- c("xvar","yvar")
head(x)
myd <- x
set.seed (123)
xvar <- c(rnorm (100, 50, 30), rnorm (100, 40, 10), rnorm (100, 70, 10))
yvar <-   xvar + rnorm (length (xvar), 0, 20)
myd <- data.frame (xvar, yvar)
p1 <- ggplot(myd,aes(x=xvar,y=yvar))+
stat_density2d(aes(fill=..level..), geom="polygon") +
geom_polygon(aes(x, y),
data.frame(x = c(-Inf, -Inf, 30, 30), y = c(-Inf, 30, 30, -Inf)),
alpha = 0.5, colour = NA, fill = "red") +
geom_polygon(aes(x, y),
data.frame(x = c(Inf, Inf, 80, 80), y = c(Inf, 80, 80, Inf)),
alpha = 0.5, colour = NA, fill = "green") +
coord_cartesian(c(0, 120), c(0, 120))
xd <- data.frame(density(myd$xvar)[c("x", "y")])
p2 <- ggplot(xd, aes(x, y)) +
geom_area(data = subset(xd, x < 30), fill = "red") +
geom_area(data = subset(xd, x > 80), fill = "green") +
geom_line() +
coord_cartesian(c(0, 120))
yd <- data.frame(density(myd$yvar)[c("x", "y")])
p3 <- ggplot(yd, aes(x, y)) +
geom_area(data = subset(yd, x < 30), fill = "red") +
geom_area(data = subset(yd, x > 80), fill = "green") +
geom_line() +
coord_flip(c(0, 120))
gt <- ggplot_gtable(ggplot_build(p1))
gt2 <- ggplot_gtable(ggplot_build(p2))
gt3 <- ggplot_gtable(ggplot_build(p3))
library(gtable)
gt <- ggplot_gtable(ggplot_build(p1))
gt2 <- ggplot_gtable(ggplot_build(p2))
gt3 <- ggplot_gtable(ggplot_build(p3))
gt1 <- gtable:::gtable_add_cols(gt, unit(0.3, "null"), pos = -1)
gt1 <- gtable:::gtable_add_cols(gt, unit(0.3, "null"), pos = -1)
gt1 <- gtable:::gtable_add_rows(gt1, unit(0.3, "null"), pos = 0)
gt1 <- gtable:::gtable_add_grob(gt1, gt2$grobs[[which(gt2$layout$name == "panel")]],
1, 4, 1, 4)
gt1 <- gtable:::gtable_add_grob(gt1, gt2$grobs[[which(gt2$layout$name == "axis-l")]],
1, 3, 1, 3, clip = "off")
gt1 <- gtable:::gtable_add_grob(gt1, gt3$grobs[[which(gt3$layout$name == "panel")]],
4, 6, 4, 6)
gt1 <- gtable:::gtable_add_grob(gt1, gt3$grobs[[which(gt3$layout$name == "axis-b")]],
5, 6, 5, 6, clip = "off")
grid.newpage()
grid.draw(gt1)
set.seed (123)
xvar <- c(rnorm (100, 50, 30), rnorm (100, 40, 10), rnorm (100, 70, 10))
yvar <-   xvar + rnorm (length (xvar), 0, 20)
myd <- data.frame (xvar, yvar)
p1 <- ggplot(myd,aes(x=xvar,y=yvar))+
stat_density2d(aes(fill=..level..), geom="polygon") +
geom_polygon(aes(x, y),
data.frame(x = c(-Inf, -Inf, 30, 30), y = c(-Inf, 30, 30, -Inf)),
alpha = 0.5, colour = NA, fill = "red") +
geom_polygon(aes(x, y),
data.frame(x = c(Inf, Inf, 80, 80), y = c(Inf, 80, 80, Inf)),
alpha = 0.5, colour = NA, fill = "green") +
coord_cartesian(c(0, 120), c(0, 120))
xd <- data.frame(density(myd$xvar)[c("x", "y")])
p2 <- ggplot(xd, aes(x, y)) +
geom_area(data = subset(xd, x < 30), fill = "red") +
geom_area(data = subset(xd, x > 80), fill = "green") +
geom_line() +
coord_cartesian(c(0, 120))
yd <- data.frame(density(myd$yvar)[c("x", "y")])
p3 <- ggplot(yd, aes(x, y)) +
geom_area(data = subset(yd, x < 30), fill = "red") +
geom_area(data = subset(yd, x > 80), fill = "green") +
geom_line() +
coord_flip(c(0, 120))
gtable
gt <- gtable(ggplot_build(p1))
gt2 <- gtable(ggplot_build(p2))
gt <- ggplot_gtable(ggplot_build(p1))
gt2 <- ggplot_gtable(ggplot_build(p2))
gt3 <- ggplot_gtable(ggplot_build(p3))
gt1 <- gtable:::gtable_add_cols(gt, unit(0.3, "null"), pos = -1)
gt1 <- gtable:::gtable_add_rows(gt1, unit(0.3, "null"), pos = 0)
gt1 <- gtable:::gtable_add_grob(gt1, gt2$grobs[[which(gt2$layout$name == "panel")]],
1, 4, 1, 4)
gt1 <- gtable:::gtable_add_grob(gt1, gt2$grobs[[which(gt2$layout$name == "axis-l")]],
1, 3, 1, 3, clip = "off")
gt1 <- gtable:::gtable_add_grob(gt1, gt3$grobs[[which(gt3$layout$name == "panel")]],
4, 6, 4, 6)
gt1 <- gtable:::gtable_add_grob(gt1, gt3$grobs[[which(gt3$layout$name == "axis-b")]],
5, 6, 5, 6, clip = "off")
grid.newpage()
grid.draw(gt1)
gt1 <- gtable:::gtable_add_cols(gt, unit(0.3, "null"), pos = -1)
gt1 <- gtable:::gtable_add_rows(gt1, unit(0.3, "null"), pos = 0)
grid.newpage()
grid.draw(gt1)
p1 <- ggplot(myd,aes(x=xvar,y=yvar))+
stat_density2d(aes(fill=..level..), geom="polygon") +
geom_polygon(aes(x, y),
data.frame(x = c(-Inf, -Inf, 30, 30), y = c(-Inf, 30, 30, -Inf)),
alpha = 0.5, colour = NA, fill = "red") +
geom_polygon(aes(x, y),
data.frame(x = c(Inf, Inf, 80, 80), y = c(Inf, 80, 80, Inf)),
alpha = 0.5, colour = NA, fill = "green") +
coord_cartesian(c(0, 120), c(0, 120))
gt <- ggplot_gtable(ggplot_build(p1))
gt1 <- gtable:::gtable_add_cols(gt, unit(0.3, "null"), pos = -1)
gt1 <- gtable:::gtable_add_rows(gt1, unit(0.3, "null"), pos = 0)
grid.newpage()
grid.draw(gt1)
set.seed (123)
xvar <- c(rnorm (100, 50, 30), rnorm (100, 40, 10), rnorm (100, 70, 10))
yvar <-   xvar + rnorm (length (xvar), 0, 20)
myd <- data.frame (xvar, yvar)
p1 <- ggplot(myd,aes(x=xvar,y=yvar))+
stat_density2d(aes(fill=..level..), geom="polygon")  +
coord_cartesian(c(0, 120), c(0, 120))
gt <- ggplot_gtable(ggplot_build(p1))
gt <- ggplot_gtable(ggplot_build(p1))
gt1 <- gtable:::gtable_add_cols(gt, unit(0.3, "null"), pos = -1)
#
# gt1 <- gtable:::gtable_add_grob(gt1, gt2$grobs[[which(gt2$layout$name == "panel")]],
#                                  1, 4, 1, 4)
# gt1 <- gtable:::gtable_add_grob(gt1, gt2$grobs[[which(gt2$layout$name == "axis-l")]],
#                                  1, 3, 1, 3, clip = "off")
#
# gt1 <- gtable:::gtable_add_grob(gt1, gt3$grobs[[which(gt3$layout$name == "panel")]],
#                                  4, 6, 4, 6)
# gt1 <- gtable:::gtable_add_grob(gt1, gt3$grobs[[which(gt3$layout$name == "axis-b")]],
#                                  5, 6, 5, 6, clip = "off")
grid.newpage()
grid.draw(gt1)
gt1 <- gtable:::gtable_add_cols(gt, unit(0.3, "null"))
#
# gt1 <- gtable:::gtable_add_grob(gt1, gt2$grobs[[which(gt2$layout$name == "panel")]],
#                                  1, 4, 1, 4)
# gt1 <- gtable:::gtable_add_grob(gt1, gt2$grobs[[which(gt2$layout$name == "axis-l")]],
#                                  1, 3, 1, 3, clip = "off")
#
# gt1 <- gtable:::gtable_add_grob(gt1, gt3$grobs[[which(gt3$layout$name == "panel")]],
#                                  4, 6, 4, 6)
# gt1 <- gtable:::gtable_add_grob(gt1, gt3$grobs[[which(gt3$layout$name == "axis-b")]],
#                                  5, 6, 5, 6, clip = "off")
grid.newpage()
grid.draw(gt1)
x <- rmvnorm(n=500, mean=diag(mix1$sigma_scaled$`u:id`), sigma=cov2cor(mix1$sigma_scaled$`u:id`), method="chol")
x <- as.data.frame(x)
colnames(x) <- c("xvar","yvar")
head(x)
myd <- x
p1 <- ggplot(myd,aes(x=xvar,y=yvar))+
stat_density2d(aes(fill=..level..), geom="polygon")  +
coord_cartesian(c(0, 120), c(0, 120))
gt <- ggplot_gtable(ggplot_build(p1))
gt1 <- gtable:::gtable_add_cols(gt, unit(0.3, "null"), pos = -1)
#
# gt1 <- gtable:::gtable_add_grob(gt1, gt2$grobs[[which(gt2$layout$name == "panel")]],
#                                  1, 4, 1, 4)
# gt1 <- gtable:::gtable_add_grob(gt1, gt2$grobs[[which(gt2$layout$name == "axis-l")]],
#                                  1, 3, 1, 3, clip = "off")
#
# gt1 <- gtable:::gtable_add_grob(gt1, gt3$grobs[[which(gt3$layout$name == "panel")]],
#                                  4, 6, 4, 6)
# gt1 <- gtable:::gtable_add_grob(gt1, gt3$grobs[[which(gt3$layout$name == "axis-b")]],
#                                  5, 6, 5, 6, clip = "off")
grid.newpage()
grid.draw(gt1)
p1 <- ggplot(myd,aes(x=xvar,y=yvar))+
stat_density2d(aes(fill=..level..), geom="polygon") # +
gt <- ggplot_gtable(ggplot_build(p1))
gt1 <- gtable:::gtable_add_cols(gt, unit(0.3, "null"), pos = -1)
#
# gt1 <- gtable:::gtable_add_grob(gt1, gt2$grobs[[which(gt2$layout$name == "panel")]],
#                                  1, 4, 1, 4)
# gt1 <- gtable:::gtable_add_grob(gt1, gt2$grobs[[which(gt2$layout$name == "axis-l")]],
#                                  1, 3, 1, 3, clip = "off")
#
# gt1 <- gtable:::gtable_add_grob(gt1, gt3$grobs[[which(gt3$layout$name == "panel")]],
#                                  4, 6, 4, 6)
# gt1 <- gtable:::gtable_add_grob(gt1, gt3$grobs[[which(gt3$layout$name == "axis-b")]],
#                                  5, 6, 5, 6, clip = "off")
grid.newpage()
grid.draw(gt1)
head(DT)
mix1 <- mmer(cbind(FruitAver, Firmness)~1,
random=~vs(id,Gu=A)
+ Rowf + Colf,
rcov=~units, getPEV = FALSE,
data=DT2)
mix1$sigma
cov2cor(mix1$sigma_scaled$`u:id`)
cov2cor(mix1$sigma_scaled$`u:id`)
mix1 <- mmer(cbind(FruitAver, Yield)~1,
random=~vs(id,Gu=A)
+ Rowf + Colf,
rcov=~units, getPEV = FALSE,
data=DT2)
mix1$sigma
cov2cor(mix1$sigma_scaled$`u:id`)
?rmvnorm
diag(mix1$sigma$`u:id`)
mix1$sigma$`u:id`
mix1$sigmaSE
mix1 <- mmer(cbind(FruitAver, Yield)~1,
random=~vs(id,Gu=A)
rcov=~units, getPEV = FALSE,
data=DT2)
mix1 <- mmer(cbind(FruitAver, Yield)~1,
random=~vs(id,Gu=A),
rcov=~units, getPEV = FALSE,
data=DT2)
mix1$sigma
cov2cor(mix1$sigma_scaled$`u:id`)
diag(mix1$sigma$`u:id`)
mix1$sigma$`u:id`
mix1$sigmaSE
diag(mix1$sigmaSE)
diag(mix1$sigmaSE)[c(1,3)]
sqrt(diag(mix1$sigmaSE)[c(1,3)])
summary(mix1)
sqrt(diag(mix1$sigmaSE)[c(1,3)])
mix1$sigmaSE
mix1$sigmaSE[c(1,3),c(1,3)]
x <- rmvnorm(n=50000, mean=diag(mix1$sigma$`u:id`), sigma=mix1$sigmaSE[c(1,3),c(1,3)], method="chol")
x <- as.data.frame(x)
colnames(x) <- c("xvar","yvar")
head(x)
myd <- x
p1 <- ggplot(myd,aes(x=xvar,y=yvar))+
stat_density2d(aes(fill=..level..), geom="polygon") # +
gt <- ggplot_gtable(ggplot_build(p1))
gt1 <- gtable:::gtable_add_cols(gt, unit(0.3, "null"), pos = -1)
#
# gt1 <- gtable:::gtable_add_grob(gt1, gt2$grobs[[which(gt2$layout$name == "panel")]],
#                                  1, 4, 1, 4)
# gt1 <- gtable:::gtable_add_grob(gt1, gt2$grobs[[which(gt2$layout$name == "axis-l")]],
#                                  1, 3, 1, 3, clip = "off")
#
# gt1 <- gtable:::gtable_add_grob(gt1, gt3$grobs[[which(gt3$layout$name == "panel")]],
#                                  4, 6, 4, 6)
# gt1 <- gtable:::gtable_add_grob(gt1, gt3$grobs[[which(gt3$layout$name == "axis-b")]],
#                                  5, 6, 5, 6, clip = "off")
grid.newpage()
grid.draw(gt1)
diag(mix1$sigma$`u:id`)
mix1$sigmaSE[c(1,3),c(1,3)]
sqrt(mix1$sigmaSE[c(1,3),c(1,3)])
x <- rmvnorm(n=50000, mean=diag(mix1$sigma$`u:id`), sigma=sqrt(mix1$sigmaSE[c(1,3),c(1,3)]), method="chol")
x <- as.data.frame(x)
colnames(x) <- c("xvar","yvar")
head(x)
myd <- x
library(ggplot2)
p1 <- ggplot(myd,aes(x=xvar,y=yvar))+
stat_density2d(aes(fill=..level..), geom="polygon") # +
gt <- ggplot_gtable(ggplot_build(p1))
gt1 <- gtable:::gtable_add_cols(gt, unit(0.3, "null"), pos = -1)
#
# gt1 <- gtable:::gtable_add_grob(gt1, gt2$grobs[[which(gt2$layout$name == "panel")]],
#                                  1, 4, 1, 4)
# gt1 <- gtable:::gtable_add_grob(gt1, gt2$grobs[[which(gt2$layout$name == "axis-l")]],
#                                  1, 3, 1, 3, clip = "off")
#
# gt1 <- gtable:::gtable_add_grob(gt1, gt3$grobs[[which(gt3$layout$name == "panel")]],
#                                  4, 6, 4, 6)
# gt1 <- gtable:::gtable_add_grob(gt1, gt3$grobs[[which(gt3$layout$name == "axis-b")]],
#                                  5, 6, 5, 6, clip = "off")
grid.newpage()
grid.draw(gt1)
summary(mix1)
data("DT_fulldiallel")
head(DT)
mix1 <- mmer(cbind(pods,seeds)~1, random=~vs(overlay(female,male)),data=DT)
mix1$sigma$`u:id`
mix1$sigma$`u:female`
cov2cor(mix1$sigma$`u:female`)
mix1$sigmaSE
sqrt(mix1$sigmaSE[c(1,3),c(1,3)])
x <- rmvnorm(n=50000, mean=diag(mix1$sigma$`u:female`), sigma=sqrt(mix1$sigmaSE[c(1,3),c(1,3)]), method="chol")
x <- as.data.frame(x)
colnames(x) <- c("xvar","yvar")
head(x)
myd <- x
p1 <- ggplot(myd,aes(x=xvar,y=yvar))+
stat_density2d(aes(fill=..level..), geom="polygon") # +
gt <- ggplot_gtable(ggplot_build(p1))
gt1 <- gtable:::gtable_add_cols(gt, unit(0.3, "null"), pos = -1)
#
# gt1 <- gtable:::gtable_add_grob(gt1, gt2$grobs[[which(gt2$layout$name == "panel")]],
#                                  1, 4, 1, 4)
# gt1 <- gtable:::gtable_add_grob(gt1, gt2$grobs[[which(gt2$layout$name == "axis-l")]],
#                                  1, 3, 1, 3, clip = "off")
#
# gt1 <- gtable:::gtable_add_grob(gt1, gt3$grobs[[which(gt3$layout$name == "panel")]],
#                                  4, 6, 4, 6)
# gt1 <- gtable:::gtable_add_grob(gt1, gt3$grobs[[which(gt3$layout$name == "axis-b")]],
#                                  5, 6, 5, 6, clip = "off")
grid.newpage()
grid.draw(gt1)
summary(mix1)
